name: Build Luna Desktop Prod

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-prod:
    runs-on: windows-latest
    env:
      APP_ENV: prod
      TAG: LDP
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '12.22.1'

      # - name: Setup GitLab SSH
      #   uses: MrSquaare/ssh-setup-action@v1
      #   with:
      #     host: gitlab.com
      #     private-key: ${{ secrets.SSH_PRIVATE_KEY_GITLAB }}
      #     private-key-name: gitlab

      - name: Install Yalc
        run: npm i -g yalc electron-builder@22.2.0

      # - name: Install Wine Macos
      #   run: >
      #     brew install --cask xquartz &&
      #     brew tap homebrew/cask-versions &&
      #     brew install --cask --no-quarantine wine-staging

      # - name: Install Wine Ubuntu
      #   run: >
      #     sudo dpkg --add-architecture i386 &&
      #     wget -qO - https://dl.winehq.org/wine-builds/winehq.key | sudo apt-key add - &&
      #     sudo add-apt-repository ppa:cybermax-dexter/sdl2-backport &&
      #     sudo apt-add-repository "deb https://dl.winehq.org/wine-builds/ubuntu $(lsb_release -cs) main" &&
      #     sudo apt install --install-recommends winehq-stable

      - name: Clone and Build Middle Backend
        run: >
          git clone --single-branch --branch ${{ secrets.MIDDLE_BACKEND_BRANCH }} https://${{secrets.GITLAB_USER}}:${{secrets.GITLAB_PASS}}@gitlab.com/piri/luna-middle-backend-api.git && 
          cd luna-middle-backend-api && yarn && yarn build-electron-${{env.APP_ENV}} &&
          cd build && yalc publish --private

      - name: Clone Luna Desktop
        run: >
          git clone --single-branch --branch ${{ secrets.LUNA_DESKTOP_BRANCH }} https://${{secrets.GITLAB_USER}}:${{secrets.GITLAB_PASS}}@@gitlab.com/piri/luna-desktop-electron.git desktop && 
          cd desktop && yalc add luna-middle-backend-ts

      - name: Install Dependencies
        run: >
          cd desktop &&
          node -v &&
          npm install

      - name: Build React
        run: >
          cd desktop &&
          npm run build-react

      - name: Build Electron
        run: >
          cd desktop &&
          npm run build-win

      - name: Get Time
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 7
          format: "YYYY-MM-DD_HH.mm"
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
#         with:
#           tag_name: ${{env.TAG}}_${{ steps.time.outputs.time }}
#           release_name: "[${{ steps.time.outputs.time }}] ${{env.APP_ENV}}"
#           draft: false
#           prerelease: false

#       - name: Upload Release Asset
#         id: upload_release_asset
#         uses: actions/upload-release-asset@v1
#         env:
#          GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
#         with:
#           upload_url: ${{ steps.create_release.outputs.upload_url }}
#           asset_path: desktop/dist/Luna POS-1.0.0.dmg
#           asset_name: luna-desktop-${{env.APP_ENV}}_[${{ steps.time.outputs.time }}].apk
#           asset_content_type: application/vnd.android.package-archive

